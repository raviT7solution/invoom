type Addons {
  deliveryPrice: Float!
  id: ID!
  name: String!
  price: Float!
  takeoutPrice: Float!
  visible: Boolean!
}

input AddonsAttributes {
  deliveryPrice: Float
  name: String
  price: Float
  takeoutPrice: Float
  visible: Boolean
}

"""
Autogenerated input type of AddonsCreate
"""
input AddonsCreateInput {
  attributes: AddonsAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  restaurantId: ID!
}

"""
Autogenerated input type of AddonsDelete
"""
input AddonsDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of AddonsUpdate
"""
input AddonsUpdateInput {
  attributes: AddonsAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

type Admin {
  email: String!
  firstName: String!
  fullName: String!
  id: ID!
  lastName: String!
  restaurants: [Restaurant!]!
}

type AdminSession {
  token: String!
}

"""
Autogenerated input type of AdminSessionCreate
"""
input AdminSessionCreateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  password: String!
  subject: AdminSessionCreateSubjectEnum!
}

enum AdminSessionCreateSubjectEnum {
  kds
  mobile
  web
}

type AppliedDiscount {
  discountType: DiscountTypeEnum!
  discountableId: ID!
  discountableType: String!
  id: ID!
  name: String!
  value: Float!
}

"""
Autogenerated input type of AppliedDiscountCreate
"""
input AppliedDiscountCreateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  discountId: ID!
  discountableId: ID!
  discountableType: AppliedDiscountDiscountableType!
}

"""
Autogenerated input type of AppliedDiscountDelete
"""
input AppliedDiscountDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

enum AppliedDiscountDiscountableType {
  bill_wise
  item_wise
}

type Booking {
  appliedDiscount: AppliedDiscount
  bookingTables: [BookingTable!]!
  bookingType: BookingType!
  clockedInAt: ISO8601DateTime!
  clockedOutAt: ISO8601DateTime
  customer: Customer
  estimatedDuration: String
  id: ID!
  pax: Int
  tickets: [Ticket!]!
  token: String
  userFullName: String!
}

input BookingAttributes {
  bookingType: BookingTypeAttribute
  customerId: ID
  estimatedDuration: String
  floorObjectIds: [ID!]
  pax: Int
}

"""
BookingCollection type
"""
type BookingCollection {
  """
  A collection of paginated BookingCollection
  """
  collection: [Booking!]!

  """
  Pagination Metadata for navigating the Pagination
  """
  metadata: CollectionMetadata!
}

"""
Autogenerated input type of BookingCreate
"""
input BookingCreateInput {
  attributes: BookingAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  restaurantId: ID!
}

type BookingTable {
  booking: Booking!
  floorObject: FloorObject
  name: String!
}

enum BookingType {
  delivery
  dine_in
  takeout
}

enum BookingTypeAttribute {
  delivery
  dine_in
  takeout
}

"""
Autogenerated input type of BookingUpdate
"""
input BookingUpdateInput {
  attributes: BookingAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

type Category {
  id: ID!
  items: [Item!]!
  menuIds: [ID!]!
  name: String!
  visible: Boolean!
}

input CategoryAttributes {
  menuIds: [ID!]
  name: String
  visible: Boolean
}

"""
Autogenerated input type of CategoryCreate
"""
input CategoryCreateInput {
  attributes: CategoryAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  restaurantId: ID!
}

"""
Autogenerated input type of CategoryDelete
"""
input CategoryDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of CategoryUpdate
"""
input CategoryUpdateInput {
  attributes: CategoryAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of ChangePassword
"""
input ChangePasswordInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  currentPassword: String!
  password: String!
}

type City {
  name: String!
}

"""
Type for CollectionMetadataType
"""
type CollectionMetadata {
  """
  Current Page of loaded data
  """
  currentPage: Int!

  """
  The number of items per page
  """
  limitValue: Int!

  """
  The total number of items to be paginated
  """
  totalCount: Int!

  """
  The total number of pages in the pagination
  """
  totalPages: Int!
}

type Country {
  alpha2: String!
  code: String!
  name: String!
  timezones: [Timezone!]!
}

type Customer {
  email: String
  id: ID!
  name: String!
  phoneNumber: String!
}

input CustomerAttributes {
  email: String
  name: String
  phoneNumber: String
}

"""
CustomerCollection type
"""
type CustomerCollection {
  """
  A collection of paginated CustomerCollection
  """
  collection: [Customer!]!

  """
  Pagination Metadata for navigating the Pagination
  """
  metadata: CollectionMetadata!
}

"""
Autogenerated input type of CustomerCreate
"""
input CustomerCreateInput {
  attributes: CustomerAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  restaurantId: ID!
}

type Discount {
  autoApply: Boolean!
  blackOutDates: [ISO8601Date!]!
  capping: Float!
  categoryIds: [ID!]!
  channels: [DiscountChannelEnum!]!
  clubbed: Boolean!
  discountOn: DiscountOnEnum!
  discountType: DiscountTypeEnum!
  endDateTime: ISO8601DateTime
  id: ID!
  itemIds: [ID!]!
  name: String!
  repeat: [DiscountRepeatEnum!]!
  startDateTime: ISO8601DateTime
  threshold: Float!
  value: Float!
  visible: Boolean!
}

input DiscountAttributes {
  autoApply: Boolean
  blackOutDates: [ISO8601Date!]
  capping: Float
  categoryIds: [ID!]
  channels: [DiscountChannelEnum!]
  clubbed: Boolean
  discountOn: DiscountOnEnum
  discountType: DiscountTypeEnum
  endDateTime: ISO8601DateTime
  itemIds: [ID!]
  name: String
  repeat: [DiscountRepeatEnum!]
  startDateTime: ISO8601DateTime
  threshold: Float
  value: Float
  visible: Boolean
}

enum DiscountChannelEnum {
  all
  delivery
  dine_in
  takeout
}

"""
Autogenerated input type of DiscountCreate
"""
input DiscountCreateInput {
  attributes: DiscountAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  restaurantId: ID!
}

"""
Autogenerated input type of DiscountDelete
"""
input DiscountDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

enum DiscountOnEnum {
  bill_wise
  item_wise
}

enum DiscountRepeatEnum {
  Fri
  Mon
  Sat
  Sun
  Thu
  Tue
  Wed
}

enum DiscountTypeEnum {
  bogo
  combo
  compoff
  coupons
  flat
  percentage
}

"""
Autogenerated input type of DiscountUpdate
"""
input DiscountUpdateInput {
  attributes: DiscountAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

type FloorObject {
  bookingTable: BookingTable
  data: FloorObjectData!
  id: ID!
  name: String!
  objectType: FloorObjectType!
}

input FloorObjectAttributes {
  data: JSON
  id: ID
  name: String
  objectType: String
}

type FloorObjectData {
  addons: FloorObjectDataAddons
  length: Float!
  rotate: Float!
  translateX: Float!
  translateY: Float!
  width: Float!
}

type FloorObjectDataAddons {
  chairQuantity: JSON!
  type: FloorObjectDataAddonsType!
}

enum FloorObjectDataAddonsType {
  oval
  rectangular
}

enum FloorObjectType {
  bar
  buffet
  object
  space
  speaker
  stage
  table
}

"""
Autogenerated input type of FloorObjectUpdate
"""
input FloorObjectUpdateInput {
  attributes: [FloorObjectAttributes!]!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  restaurantId: ID!
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type InventoryCategory {
  description: String!
  id: ID!
  name: String!
  visible: Boolean!
}

input InventoryCategoryAttributes {
  description: String
  name: String
  visible: Boolean
}

"""
Autogenerated input type of InventoryCategoryCreate
"""
input InventoryCategoryCreateInput {
  attributes: InventoryCategoryAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  restaurantId: ID!
}

"""
Autogenerated input type of InventoryCategoryDelete
"""
input InventoryCategoryDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of InventoryCategoryUpdate
"""
input InventoryCategoryUpdateInput {
  attributes: InventoryCategoryAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

type Item {
  addonIds: [ID!]!
  addons: [Addons!]!
  categoryId: ID!
  costOfProduction: Float!
  deliveryPrice: Float!
  description: String!
  displayName: String!
  id: ID!
  modifierIds: [ID!]!
  modifiers: [Modifier!]!
  name: String!
  price: Float!
  takeoutPrice: Float!
  tax: Tax!
  taxId: ID!
  visible: Boolean!
}

input ItemAttributes {
  addonIds: [ID!]
  categoryId: ID
  costOfProduction: Float
  deliveryPrice: Float
  description: String
  displayName: String
  modifierIds: [ID!]
  name: String
  price: Float
  takeoutPrice: Float
  taxId: ID
  visible: Boolean
}

"""
Autogenerated input type of ItemCodeGenerate
"""
input ItemCodeGenerateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  restaurantId: ID!
}

"""
Autogenerated input type of ItemCreate
"""
input ItemCreateInput {
  attributes: ItemAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  restaurantId: ID!
}

"""
Autogenerated input type of ItemDelete
"""
input ItemDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of ItemUpdate
"""
input ItemUpdateInput {
  attributes: ItemAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Represents untyped JSON
"""
scalar JSON

type KitchenProfile {
  categoryIds: [ID!]!
  columns: Int!
  id: ID!
  name: String!
  notify: Boolean!
  rows: Int!
}

input KitchenProfileAttributes {
  categoryIds: [ID!]
  columns: Int
  name: String
  notify: Boolean
  rows: Int
}

"""
Autogenerated input type of KitchenProfileCreate
"""
input KitchenProfileCreateInput {
  attributes: KitchenProfileAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  restaurantId: ID!
}

"""
Autogenerated input type of KitchenProfileDelete
"""
input KitchenProfileDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of KitchenProfileUpdate
"""
input KitchenProfileUpdateInput {
  attributes: KitchenProfileAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

type Menu {
  categories: [Category!]!
  description: String!
  id: ID!
  name: String!
  visible: Boolean!
}

input MenuAttributes {
  description: String
  name: String
  visible: Boolean
}

"""
Autogenerated input type of MenuCreate
"""
input MenuCreateInput {
  attributes: MenuAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  restaurantId: ID!
}

"""
Autogenerated input type of MenuDelete
"""
input MenuDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of MenuUpdate
"""
input MenuUpdateInput {
  attributes: MenuAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

type Modifier {
  categoryIds: [ID!]!
  globalModifier: Boolean!
  id: ID!
  itemIds: [ID!]!
  multiSelect: Boolean!
  name: String!
  values: [String!]!
  visible: Boolean!
}

input ModifierAttributes {
  categoryIds: [ID!]
  globalModifier: Boolean
  itemIds: [ID!]
  multiSelect: Boolean
  name: String
  values: [String!]!
  visible: Boolean
}

"""
Autogenerated input type of ModifierCreate
"""
input ModifierCreateInput {
  attributes: ModifierAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  restaurantId: ID!
}

"""
Autogenerated input type of ModifierDelete
"""
input ModifierDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of ModifierUpdate
"""
input ModifierUpdateInput {
  attributes: ModifierAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

type Mutation {
  addonsCreate(
    """
    Parameters for AddonsCreate
    """
    input: AddonsCreateInput!
  ): Boolean!
  addonsDelete(
    """
    Parameters for AddonsDelete
    """
    input: AddonsDeleteInput!
  ): Boolean!
  addonsUpdate(
    """
    Parameters for AddonsUpdate
    """
    input: AddonsUpdateInput!
  ): Boolean!
  adminSessionCreate(
    """
    Parameters for AdminSessionCreate
    """
    input: AdminSessionCreateInput!
  ): AdminSession!
  appliedDiscountCreate(
    """
    Parameters for AppliedDiscountCreate
    """
    input: AppliedDiscountCreateInput!
  ): Boolean!
  appliedDiscountDelete(
    """
    Parameters for AppliedDiscountDelete
    """
    input: AppliedDiscountDeleteInput!
  ): Boolean!
  bookingCreate(
    """
    Parameters for BookingCreate
    """
    input: BookingCreateInput!
  ): ID!
  bookingUpdate(
    """
    Parameters for BookingUpdate
    """
    input: BookingUpdateInput!
  ): ID!
  categoryCreate(
    """
    Parameters for CategoryCreate
    """
    input: CategoryCreateInput!
  ): Boolean!
  categoryDelete(
    """
    Parameters for CategoryDelete
    """
    input: CategoryDeleteInput!
  ): Boolean!
  categoryUpdate(
    """
    Parameters for CategoryUpdate
    """
    input: CategoryUpdateInput!
  ): Boolean!
  changePassword(
    """
    Parameters for ChangePassword
    """
    input: ChangePasswordInput!
  ): Boolean!
  customerCreate(
    """
    Parameters for CustomerCreate
    """
    input: CustomerCreateInput!
  ): ID!
  discountCreate(
    """
    Parameters for DiscountCreate
    """
    input: DiscountCreateInput!
  ): Boolean!
  discountDelete(
    """
    Parameters for DiscountDelete
    """
    input: DiscountDeleteInput!
  ): Boolean!
  discountUpdate(
    """
    Parameters for DiscountUpdate
    """
    input: DiscountUpdateInput!
  ): Boolean!
  floorObjectUpdate(
    """
    Parameters for FloorObjectUpdate
    """
    input: FloorObjectUpdateInput!
  ): Boolean!
  inventoryCategoryCreate(
    """
    Parameters for InventoryCategoryCreate
    """
    input: InventoryCategoryCreateInput!
  ): Boolean!
  inventoryCategoryDelete(
    """
    Parameters for InventoryCategoryDelete
    """
    input: InventoryCategoryDeleteInput!
  ): Boolean!
  inventoryCategoryUpdate(
    """
    Parameters for InventoryCategoryUpdate
    """
    input: InventoryCategoryUpdateInput!
  ): Boolean!
  itemCodeGenerate(
    """
    Parameters for ItemCodeGenerate
    """
    input: ItemCodeGenerateInput!
  ): String!
  itemCreate(
    """
    Parameters for ItemCreate
    """
    input: ItemCreateInput!
  ): Boolean!
  itemDelete(
    """
    Parameters for ItemDelete
    """
    input: ItemDeleteInput!
  ): Boolean!
  itemUpdate(
    """
    Parameters for ItemUpdate
    """
    input: ItemUpdateInput!
  ): Boolean!
  kitchenProfileCreate(
    """
    Parameters for KitchenProfileCreate
    """
    input: KitchenProfileCreateInput!
  ): Boolean!
  kitchenProfileDelete(
    """
    Parameters for KitchenProfileDelete
    """
    input: KitchenProfileDeleteInput!
  ): Boolean!
  kitchenProfileUpdate(
    """
    Parameters for KitchenProfileUpdate
    """
    input: KitchenProfileUpdateInput!
  ): Boolean!
  menuCreate(
    """
    Parameters for MenuCreate
    """
    input: MenuCreateInput!
  ): Boolean!
  menuDelete(
    """
    Parameters for MenuDelete
    """
    input: MenuDeleteInput!
  ): Boolean!
  menuUpdate(
    """
    Parameters for MenuUpdate
    """
    input: MenuUpdateInput!
  ): Boolean!
  modifierCreate(
    """
    Parameters for ModifierCreate
    """
    input: ModifierCreateInput!
  ): Boolean!
  modifierDelete(
    """
    Parameters for ModifierDelete
    """
    input: ModifierDeleteInput!
  ): Boolean!
  modifierUpdate(
    """
    Parameters for ModifierUpdate
    """
    input: ModifierUpdateInput!
  ): Boolean!
  paymentCreate(
    """
    Parameters for PaymentCreate
    """
    input: PaymentCreateInput!
  ): Boolean!
  printerConfigurationCreate(
    """
    Parameters for PrinterConfigurationCreate
    """
    input: PrinterConfigurationCreateInput!
  ): Boolean!
  printerConfigurationDelete(
    """
    Parameters for PrinterConfigurationDelete
    """
    input: PrinterConfigurationDeleteInput!
  ): Boolean!
  printerConfigurationUpdate(
    """
    Parameters for PrinterConfigurationUpdate
    """
    input: PrinterConfigurationUpdateInput!
  ): Boolean!
  productCreate(
    """
    Parameters for ProductCreate
    """
    input: ProductCreateInput!
  ): Boolean!
  productDelete(
    """
    Parameters for ProductDelete
    """
    input: ProductDeleteInput!
  ): Boolean!
  productUpdate(
    """
    Parameters for ProductUpdate
    """
    input: ProductUpdateInput!
  ): Boolean!
  reservationCreate(
    """
    Parameters for ReservationCreate
    """
    input: ReservationCreateInput!
  ): Boolean!
  reservationUpdate(
    """
    Parameters for ReservationUpdate
    """
    input: ReservationUpdateInput!
  ): Boolean!
  restaurantCreate(
    """
    Parameters for RestaurantCreate
    """
    input: RestaurantCreateInput!
  ): Boolean!
  restaurantUpdate(
    """
    Parameters for RestaurantUpdate
    """
    input: RestaurantUpdateInput!
  ): Boolean!
  roleCreate(
    """
    Parameters for RoleCreate
    """
    input: RoleCreateInput!
  ): Role!
  roleDelete(
    """
    Parameters for RoleDelete
    """
    input: RoleDeleteInput!
  ): Role!
  roleUpdate(
    """
    Parameters for RoleUpdate
    """
    input: RoleUpdateInput!
  ): Role!
  ticketCreate(
    """
    Parameters for TicketCreate
    """
    input: TicketCreateInput!
  ): Boolean!
  ticketItemDelete(
    """
    Parameters for TicketItemDelete
    """
    input: TicketItemDeleteInput!
  ): Boolean!
  ticketItemsUpdate(
    """
    Parameters for TicketItemsUpdate
    """
    input: TicketItemsUpdateInput!
  ): Boolean!
  userCreate(
    """
    Parameters for UserCreate
    """
    input: UserCreateInput!
  ): Boolean!
  userDelete(
    """
    Parameters for UserDelete
    """
    input: UserDeleteInput!
  ): User!
  userSessionCreate(
    """
    Parameters for UserSessionCreate
    """
    input: UserSessionCreateInput!
  ): UserSession!
  userSessionDestroy(
    """
    Parameters for UserSessionDestroy
    """
    input: UserSessionDestroyInput!
  ): Boolean!
  userUpdate(
    """
    Parameters for UserUpdate
    """
    input: UserUpdateInput!
  ): Boolean!
}

input PaymentAttributes {
  mode: PaymentModeAttribute
}

"""
Autogenerated input type of PaymentCreate
"""
input PaymentCreateInput {
  attributes: PaymentAttributes!
  bookingId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

enum PaymentModeAttribute {
  cash
}

type PrinterConfiguration {
  id: ID!
  ipAddress: String!
  name: String!
  port: String!
  visible: Boolean!
}

input PrinterConfigurationAttributes {
  ipAddress: String
  name: String
  port: String
  visible: Boolean
}

"""
Autogenerated input type of PrinterConfigurationCreate
"""
input PrinterConfigurationCreateInput {
  attributes: PrinterConfigurationAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  restaurantId: ID!
}

"""
Autogenerated input type of PrinterConfigurationDelete
"""
input PrinterConfigurationDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of PrinterConfigurationUpdate
"""
input PrinterConfigurationUpdateInput {
  attributes: PrinterConfigurationAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

type Product {
  description: String!
  id: ID!
  inventoryCategoryId: ID!
  itemCode: String!
  name: String!
  price: Float!
  reorderPoint: Float!
  stockLimit: Float!
  taxId: ID!
  uom: String!
  visible: Boolean!
  weight: Float!
}

input ProductAttributes {
  description: String
  inventoryCategoryId: ID
  itemCode: String
  name: String
  price: Float
  reorderPoint: Float
  stockLimit: Float
  taxId: ID
  uom: String
  visible: Boolean
  weight: Float
}

"""
Autogenerated input type of ProductCreate
"""
input ProductCreateInput {
  attributes: ProductAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  restaurantId: ID!
}

"""
Autogenerated input type of ProductDelete
"""
input ProductDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of ProductUpdate
"""
input ProductUpdateInput {
  attributes: ProductAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

type Province {
  code: String!
  name: String!
}

type Query {
  addon(id: ID!): Addons!
  addons(restaurantId: ID!): [Addons!]!
  booking(id: ID!): Booking!
  bookings(bookingTypes: [String!]!, endDate: ISO8601DateTime, page: Int!, perPage: Int!, restaurantId: ID!, startDate: ISO8601DateTime, status: String!): BookingCollection!
  categories(restaurantId: ID!): [Category!]!
  category(id: ID!): Category!
  cities(alpha2: String!, provinceCode: String!): [City!]!
  countries: [Country!]!
  currentAdmin: Admin!
  currentUser: User!
  customers(page: Int!, perPage: Int!, query: String!, restaurantId: ID!): CustomerCollection!
  discount(id: ID!): Discount!
  discounts(channel: DiscountChannelEnum, discountOn: DiscountOnEnum, itemId: ID, restaurantId: ID!): [Discount!]!
  floorObjects(restaurantId: ID!): [FloorObject!]!
  inventoryCategories(restaurantId: ID!): [InventoryCategory!]!
  inventoryCategory(id: ID!): InventoryCategory!
  item(id: ID!): Item!
  items(categoryId: ID, restaurantId: ID!): [Item!]!
  kitchenProfile(id: ID!): KitchenProfile!
  kitchenProfiles(restaurantId: ID!): [KitchenProfile!]!
  menu(id: ID!): Menu!
  menus(restaurantId: ID!): [Menu!]!
  modifier(id: ID!): Modifier!
  modifiers(restaurantId: ID!): [Modifier!]!
  printerConfiguration(id: ID!): PrinterConfiguration!
  printerConfigurations(restaurantId: ID!): [PrinterConfiguration!]!
  product(id: ID!): Product!
  products(restaurantId: ID!): [Product!]!
  provinces(alpha2: String!): [Province!]!
  reservations(endTime: ISO8601DateTime, page: Int!, perPage: Int!, restaurantId: ID!, startTime: ISO8601DateTime, status: String): ReservationCollection!
  restaurants(status: String): [Restaurant!]!
  role(id: ID!): Role!
  roles(restaurantId: ID!): [Role!]!
  taxes(restaurantId: ID!): [Tax!]!
  tickets(bookingTypes: [String!], kitchenProfileId: ID, page: Int!, perPage: Int!, restaurantId: ID!, status: [String!]): TicketCollection!
  timeSheets(endDate: String, page: Int!, perPage: Int!, restaurantId: ID!, startDate: String, userIds: [String!]): TimeSheetCollection!
  user(id: ID!): User!
  users(restaurantId: ID!): [User!]!
}

type Reservation {
  customer: Customer!
  id: ID!
  pax: Int!
  reservationAt: ISO8601DateTime!
  status: ReservationStatusType!
}

input ReservationAttributes {
  customerId: ID
  pax: Int
  reservationAt: ISO8601DateTime
  status: ReservationStatusAttribute
}

"""
ReservationCollection type
"""
type ReservationCollection {
  """
  A collection of paginated ReservationCollection
  """
  collection: [Reservation!]!

  """
  Pagination Metadata for navigating the Pagination
  """
  metadata: CollectionMetadata!
}

"""
Autogenerated input type of ReservationCreate
"""
input ReservationCreateInput {
  attributes: ReservationAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  restaurantId: ID!
}

enum ReservationStatusAttribute {
  completed
  pending
}

enum ReservationStatusType {
  completed
  pending
}

"""
Autogenerated input type of ReservationUpdate
"""
input ReservationUpdateInput {
  attributes: ReservationAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

type Restaurant {
  address: String
  city: String!
  id: ID!
  name: String!
  postalCode: String!
  province: String!
  timezone: String!
}

input RestaurantAttributes {
  address: String
  breakEndTime: String
  breakStartTime: String
  businessEndTime: String
  businessStartTime: String
  city: String
  country: String
  email: String
  name: String
  operationalSince: String
  phoneNumber: String
  pin: String
  postalCode: String
  province: String
  restaurantType: String
  timezone: String
}

"""
Autogenerated input type of RestaurantCreate
"""
input RestaurantCreateInput {
  attributes: RestaurantAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of RestaurantUpdate
"""
input RestaurantUpdateInput {
  attributes: RestaurantAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

type Role {
  id: ID!
  name: String!
  permissions: [String!]!
  users: [User!]!
}

input RoleAttributes {
  name: String
  permissions: [String!]
}

"""
Autogenerated input type of RoleCreate
"""
input RoleCreateInput {
  attributes: RoleAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  restaurantId: ID!
}

"""
Autogenerated input type of RoleDelete
"""
input RoleDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of RoleUpdate
"""
input RoleUpdateInput {
  attributes: RoleAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

type Tax {
  category: String!
  country: String!
  displayName: String!
  gst: Float!
  hst: Float!
  id: ID!
  province: String!
  pst: Float!
  qst: Float!
  rst: Float!
}

type Ticket {
  booking: Booking!
  createdAt: ISO8601DateTime!
  id: ID!
  ticketItems: [TicketItem!]!
}

"""
TicketCollection type
"""
type TicketCollection {
  """
  A collection of paginated TicketCollection
  """
  collection: [Ticket!]!

  """
  Pagination Metadata for navigating the Pagination
  """
  metadata: CollectionMetadata!
}

"""
Autogenerated input type of TicketCreate
"""
input TicketCreateInput {
  attributes: [TicketItemAttributes!]!
  bookingId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

type TicketItem {
  appliedDiscount: AppliedDiscount
  displayName: String!
  gst: Float!
  hst: Float!
  id: ID!
  itemId: ID!
  modifiers: [String!]!
  name: String!
  note: String
  price: Float!
  pst: Float!
  qst: Float!
  quantity: Int!
  rst: Float!
  status: TicketItemStatusType!
  ticketItemAddons: [TicketItemAddon!]!
}

type TicketItemAddon {
  id: ID!
  name: String!
  price: Float!
}

input TicketItemAttributes {
  addonIds: [ID!]
  id: ID
  itemId: ID
  modifiers: [String!]
  note: String
  quantity: Int
  status: TicketItemStatusAttribute
}

"""
Autogenerated input type of TicketItemDelete
"""
input TicketItemDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  operationPin: String
}

enum TicketItemStatusAttribute {
  preparing
  queued
  ready
  served
}

enum TicketItemStatusType {
  preparing
  queued
  ready
  served
}

"""
Autogenerated input type of TicketItemsUpdate
"""
input TicketItemsUpdateInput {
  attributes: [TicketItemAttributes!]!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

type TimeSheet {
  endTime: ISO8601DateTime
  id: ID!
  startTime: ISO8601DateTime!
  user: User!
}

"""
TimeSheetCollection type
"""
type TimeSheetCollection {
  """
  A collection of paginated TimeSheetCollection
  """
  collection: [TimeSheet!]!

  """
  Pagination Metadata for navigating the Pagination
  """
  metadata: CollectionMetadata!
}

type Timezone {
  humanizeOffset: String!
  identifier: String!
  offset: Int!
}

type User {
  address: String
  city: String
  clockedInAt: ISO8601DateTime
  country: String
  countryCode: String!
  email: String!
  employmentType: String!
  endDate: String
  firstName: String!
  fullName: String!
  gender: String!
  id: ID!
  lastName: String!
  maxHour: Float!
  overTime: Boolean!
  phoneNumber: String!
  preferredName: String!
  province: String
  roleIds: [ID!]!
  startDate: ISO8601Date!
  wage: Float!
  zipCode: String
}

input UserAttributes {
  address: String
  city: String
  country: String
  countryCode: String
  email: String
  employmentType: String
  endDate: String
  firstName: String
  gender: String
  lastName: String
  maxHour: Float
  password: String
  phoneNumber: String
  pin: String
  preferredName: String
  province: String
  roleIds: [ID!]
  startDate: String
  wage: Float
  zipCode: String
}

"""
Autogenerated input type of UserCreate
"""
input UserCreateInput {
  attributes: UserAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  restaurantId: ID!
}

"""
Autogenerated input type of UserDelete
"""
input UserDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

type UserSession {
  clockInStatus: UserSessionClockInStatus
  permissions: [UserSessionPermissionsType!]!
  token: String!
}

input UserSessionAttributes {
  clockType: UserSessionClockType!
  loginType: UserSessionLoginType!
  password: String
  pin: String
  userId: ID
}

enum UserSessionClockInStatus {
  already_clocked_in
  already_clocked_out
}

enum UserSessionClockType {
  clock_in
  clock_out
}

"""
Autogenerated input type of UserSessionCreate
"""
input UserSessionCreateInput {
  attributes: UserSessionAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  restaurantId: ID!
}

"""
Autogenerated input type of UserSessionDestroy
"""
input UserSessionDestroyInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

enum UserSessionLoginType {
  password
  pin
}

enum UserSessionPermissionsType {
  apply_discount
  clock_in_clock_out
  delete_ticket_item
  floor_plan
  orders
  payments
  reservations
  takeout
}

"""
Autogenerated input type of UserUpdate
"""
input UserUpdateInput {
  attributes: UserAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}
