mutation adminSessionCreate($input: SessionCreateInput!) {
  adminSessionCreate(input: $input) {
    token
  }
}

query currentAdmin {
  currentAdmin {
    restaurants {
      id
      name
    }
  }
}

mutation roleCreate($input: RoleCreateInput!) {
  roleCreate(input: $input) {
    id
  }
}

mutation roleUpdate($input: RoleUpdateInput!) {
  roleUpdate(input: $input) {
    id
  }
}

mutation roleDelete($id: ID!) {
  roleDelete(input: { id: $id }) {
    id
  }
}

query role($id: ID!) {
  role(id: $id) {
    id
    name
    permissions
  }
}

query roles($restaurantId: ID!) {
  roles(restaurantId: $restaurantId) {
    id
    name
    users {
      id
      fullName
    }
  }
}

mutation userCreate($input: UserCreateInput!) {
  userCreate(input: $input) {
    id
  }
}

mutation userUpdate($input: UserUpdateInput!) {
  userUpdate(input: $input) {
    id
  }
}

mutation userDelete($id: ID!) {
  userDelete(input: { id: $id }) {
    id
  }
}

query user($id: ID!) {
  user(id: $id) {
    address
    city
    email
    endDate
    firstName
    fullName
    gender
    id
    lastName
    phoneNumber
    startDate
    username
    wage
    zipCode
    roleIds
  }
}

query floorObjects($restaurantId: ID!) {
  floorObjects(restaurantId: $restaurantId) {
    id
    name
    objectType
    data
  }
}

mutation floorObjectUpdate($input: FloorObjectUpdateInput!) {
  floorObjectUpdate(input: $input)
}

query menus($restaurantId: ID!) {
  menus(restaurantId: $restaurantId) {
    id
    name
    visible
    description
  }
}

query menu($id: ID!) {
  menu(id: $id) {
    id
    name
    visible
    description
  }
}

mutation menuCreate($input: MenuCreateInput!) {
  menuCreate(input: $input)
}

mutation menuDelete($id: ID!) {
  menuDelete(input: { id: $id })
}

mutation menuUpdate($input: MenuUpdateInput!) {
  menuUpdate(input: $input)
}

mutation createCategory($input: CategoryCreateInput!) {
  categoryCreate(input: $input)
}

query categories($restaurantId: ID!) {
  categories(restaurantId: $restaurantId) {
    id
    name
    visible
    menuIds
    items {
      addonIds
      categoryId
      costOfProduction
      deliveryPrice
      description
      displayName
      id
      name
      price
      takeOutPrice
      visible
    }
  }
}

query category($id: ID!) {
  category(id: $id) {
    id
    name
    visible
    menuIds
  }
}

mutation categoryUpdate($input: CategoryUpdateInput!) {
  categoryUpdate(input: $input)
}

mutation categoryDelete($id: ID!) {
  categoryDelete(input: { id: $id })
}

query addons($restaurantId: ID!) {
  addons(restaurantId: $restaurantId) {
    id
    name
    price
    takeoutPrice
    deliveryPrice
    visible
  }
}

query addon($id: ID!) {
  addon(id: $id) {
    id
    name
    price
    takeoutPrice
    deliveryPrice
    visible
  }
}

mutation addonsCreate($input: AddonsCreateInput!) {
  addonsCreate(input: $input)
}

mutation addonsUpdate($input: AddonsUpdateInput!) {
  addonsUpdate(input: $input)
}

mutation addonsDelete($id: ID!) {
  addonsDelete(input: { id: $id })
}

mutation itemCreate($input: ItemCreateInput!) {
  itemCreate(input: $input)
}

query item($id: ID!) {
  item(id: $id) {
    addonIds
    categoryId
    costOfProduction
    deliveryPrice
    description
    displayName
    id
    name
    price
    takeOutPrice
    visible
  }
}

mutation itemUpdate($input: ItemUpdateInput!) {
  itemUpdate(input: $input)
}

mutation itemDelete($id: ID!) {
  itemDelete(input: { id: $id })
}
